---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const workouts = await getCollection('workouts');
  return workouts.map(workout => ({
    params: { slug: workout.slug },
    props: { workout },
  }));
}

const { workout } = Astro.props;
const { Content } = await workout.render();
---

<BaseLayout 
  title={workout.data.title}
  description={workout.data.description}
>
  <article class="max-w-5xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
    <!-- Hero Header -->
    <header class="mb-16">
      <div class="text-center mb-8">
        <h1 class="workout-title text-5xl md:text-6xl font-black mb-6 text-white leading-tight tracking-tight">{workout.data.title}</h1>
        <p class="text-xl text-gray-400 max-w-3xl mx-auto leading-relaxed">{workout.data.description}</p>
      </div>
      
      <!-- Meta Info Cards -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
        <div class="bg-gradient-to-br from-blue-600 to-blue-700 rounded-2xl p-6 text-center transform hover:scale-105 transition-transform duration-300">
          <div class="text-blue-200 text-sm font-semibold uppercase tracking-wider mb-2">Difficulty</div>
          <div class="text-white text-2xl font-bold">{workout.data.difficulty}</div>
        </div>
        <div class="bg-gradient-to-br from-purple-600 to-purple-700 rounded-2xl p-6 text-center transform hover:scale-105 transition-transform duration-300">
          <div class="text-purple-200 text-sm font-semibold uppercase tracking-wider mb-2">Duration</div>
          <div class="text-white text-2xl font-bold">{workout.data.duration}</div>
        </div>
        <div class="bg-gradient-to-br from-primary to-primary-dark rounded-2xl p-6 text-center transform hover:scale-105 transition-transform duration-300">
          <div class="text-orange-200 text-sm font-semibold uppercase tracking-wider mb-2">Published</div>
          <div class="text-white text-lg font-bold">
            {new Date(workout.data.publishDate).toLocaleDateString('en-US', {
              month: 'short',
              day: 'numeric',
              year: 'numeric'
            })}
          </div>
        </div>
      </div>

      <!-- Equipment Card -->
      {workout.data.equipment && workout.data.equipment.length > 0 && (
        <div class="bg-surface-elevated rounded-2xl p-8 border border-border shadow-lg">
          <div class="flex items-center gap-3 mb-4">
            <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
            </svg>
            <strong class="text-white font-bold text-lg">Equipment Needed</strong>
          </div>
          <div class="flex flex-wrap gap-3">
            {workout.data.equipment.map((item) => (
              <span class="inline-flex items-center px-4 py-2 bg-bg-tertiary rounded-lg text-gray-300 font-medium capitalize border border-border hover:border-primary transition-colors duration-200">
                {item}
              </span>
            ))}
          </div>
        </div>
      )}
    </header>
    
    <!-- Main Content -->
    <div class="workout-content bg-surface rounded-3xl p-8 md:p-12 border border-border shadow-2xl">
      <Content />
    </div>

    <!-- Footer Navigation -->
    <footer class="mt-12 pt-8 border-t border-border">
      <div class="flex justify-between items-center">
        <a href="/workouts" class="inline-flex items-center gap-2 px-6 py-3 bg-surface-elevated rounded-xl text-primary font-bold text-base hover:bg-bg-tertiary transition-all duration-200 group border border-border hover:border-primary">
          <svg class="w-5 h-5 transform group-hover:-translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
          <span>All Workouts</span>
        </a>
        <button onclick="window.scrollTo({top: 0, behavior: 'smooth'})" class="inline-flex items-center gap-2 px-6 py-3 bg-primary rounded-xl text-white font-bold text-base hover:bg-primary-light transition-all duration-200 shadow-glow">
          <span>Back to Top</span>
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
          </svg>
        </button>
      </div>
    </footer>
  </article>
</BaseLayout>

<style is:global>
  /* Override default h1 gradient for workout title */
  .workout-title {
    background: none !important;
    -webkit-background-clip: unset !important;
    -webkit-text-fill-color: unset !important;
    background-clip: unset !important;
    color: white !important;
  }

  .workout-content {
    @apply max-w-none;
  }

  /* Hide H1 since we show title in header */
  .workout-content :global(h1) {
    @apply hidden;
  }

  /* Headings with gradient accents */
  .workout-content :global(h2),
  .workout-content :global(h3),
  .workout-content :global(h4),
  .workout-content :global(h5),
  .workout-content :global(h6) {
    @apply font-bold text-white mb-6;
  }

  .workout-content :global(h2) {
    @apply text-4xl mt-16 mb-8 text-white font-black tracking-tight;
    background: linear-gradient(135deg, #ff6b35 0%, #ff8555 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    position: relative;
    padding-bottom: 1rem;
  }

  .workout-content :global(h2)::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 60px;
    height: 4px;
    background: linear-gradient(135deg, #ff6b35 0%, #ff8555 100%);
    border-radius: 2px;
  }

  .workout-content :global(h3) {
    @apply text-2xl mt-12 mb-6 text-white font-bold;
  }

  .workout-content :global(h4) {
    @apply text-xl mt-8 mb-4 text-white font-semibold;
  }

  /* Paragraphs */
  .workout-content :global(p) {
    @apply text-gray-300 leading-relaxed mb-6 text-lg;
  }

  /* Links */
  .workout-content :global(a) {
    @apply text-primary no-underline font-semibold hover:text-primary-light transition-colors duration-200 border-b-2 border-primary/30 hover:border-primary;
  }

  /* Strong/Bold */
  .workout-content :global(strong) {
    @apply text-white font-bold;
  }

  /* Lists with better styling */
  .workout-content :global(ul),
  .workout-content :global(ol) {
    @apply my-8 pl-0 text-gray-300 space-y-3;
  }

  .workout-content :global(ul) {
    @apply list-none;
  }

  .workout-content :global(ol) {
    @apply list-none;
  }

  .workout-content :global(li) {
    @apply my-3 leading-relaxed pl-8 relative text-lg;
  }

  .workout-content :global(ul > li)::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0.6em;
    width: 8px;
    height: 8px;
    background: linear-gradient(135deg, #ff6b35 0%, #ff8555 100%);
    border-radius: 50%;
  }

  .workout-content :global(ol) {
    counter-reset: item;
  }

  .workout-content :global(ol > li) {
    counter-increment: item;
  }

  .workout-content :global(ol > li)::before {
    content: counter(item);
    position: absolute;
    left: 0;
    top: 0;
    width: 24px;
    height: 24px;
    background: linear-gradient(135deg, #ff6b35 0%, #ff8555 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.75rem;
    font-weight: bold;
    color: white;
  }

  .workout-content :global(li) :global(p) {
    @apply mb-2;
  }

  /* Nested lists */
  .workout-content :global(li) :global(ul),
  .workout-content :global(li) :global(ol) {
    @apply mt-3 mb-3;
  }

  /* Code */
  .workout-content :global(code) {
    @apply bg-gray-800 px-2 py-1 rounded text-sm font-mono text-gray-300;
  }

  .workout-content :global(pre) {
    @apply bg-gray-800 p-4 rounded-lg overflow-x-auto my-6;
  }

  .workout-content :global(pre code) {
    @apply bg-transparent p-0;
  }

  /* Horizontal Rule */
  .workout-content :global(hr) {
    @apply border-gray-700 my-12;
  }

  /* Blockquotes */
  .workout-content :global(blockquote) {
    @apply border-l-4 border-primary pl-4 py-2 my-6 italic text-gray-300;
  }

  /* Tables */
  .workout-content :global(table) {
    @apply w-full my-6 border-collapse;
  }

  .workout-content :global(th),
  .workout-content :global(td) {
    @apply border border-gray-700 px-4 py-2 text-left text-gray-300;
  }

  .workout-content :global(th) {
    @apply bg-gray-800 font-semibold text-white;
  }

  /* Images */
  .workout-content :global(img) {
    @apply rounded-lg my-6 max-w-full h-auto;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .workout-content :global(h2) {
      @apply text-2xl mt-8 mb-4;
    }

    .workout-content :global(h3) {
      @apply text-xl mt-6 mb-3;
    }
  }
</style>

