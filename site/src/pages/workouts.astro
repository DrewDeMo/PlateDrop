---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

const workouts = await getCollection('workouts');

// Sort by publish date, newest first
const sortedWorkouts = workouts.sort((a, b) => {
  const dateA = new Date(a.data.publishDate);
  const dateB = new Date(b.data.publishDate);
  return dateB.getTime() - dateA.getTime();
});

// Get unique difficulties for stats
const difficulties = [...new Set(workouts.map(w => w.data.difficulty))];
---

<BaseLayout
  title="Daily Workouts | PlateDrop"
  description="Browse PlateDrop's AI-generated daily workouts designed to motivate and challenge you every day."
>
  <div class="min-h-screen">
    <!-- Hero Section -->
    <div class="relative overflow-hidden bg-gradient-to-br from-gray-900 via-gray-800 to-black border-b border-gray-800">
      <div class="absolute inset-0 bg-[url('/images/backgrounds/gym-floor-texture.webp')] opacity-5 bg-cover bg-center"></div>
      <div class="absolute inset-0 bg-gradient-to-b from-transparent via-gray-900/50 to-gray-900"></div>
      
      <div class="relative container max-w-[1400px] mx-auto px-6 py-20 md:py-28">
        <div class="text-center max-w-4xl mx-auto">
          <!-- Icon -->
          <div class="inline-flex items-center justify-center w-20 h-20 rounded-2xl bg-gradient-to-br from-primary to-primary-dark mb-8 shadow-glow">
            <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
          </div>
          
          <h1 class="text-5xl md:text-7xl font-black mb-6 text-white leading-tight tracking-tight">
            Daily <span class="bg-gradient-to-r from-primary via-primary-light to-primary bg-clip-text text-transparent">Workouts</span>
          </h1>
          
          <p class="text-xl md:text-2xl text-gray-300 mb-8 leading-relaxed max-w-3xl mx-auto">
            AI-powered workout routines designed to challenge and motivate you every single day
          </p>

          <!-- Stats Bar -->
          <div class="flex flex-wrap justify-center gap-6 md:gap-12 mt-12">
            <div class="text-center">
              <div class="text-4xl md:text-5xl font-black text-primary mb-2">{workouts.length}</div>
              <div class="text-sm md:text-base text-gray-400 font-semibold uppercase tracking-wider">Total Workouts</div>
            </div>
            <div class="text-center">
              <div class="text-4xl md:text-5xl font-black text-primary mb-2">{difficulties.length}</div>
              <div class="text-sm md:text-base text-gray-400 font-semibold uppercase tracking-wider">Difficulty Levels</div>
            </div>
            <div class="text-center">
              <div class="text-4xl md:text-5xl font-black text-primary mb-2">âˆž</div>
              <div class="text-sm md:text-base text-gray-400 font-semibold uppercase tracking-wider">Possibilities</div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Workouts Grid Section -->
    <div class="container max-w-[1400px] mx-auto px-6 py-16">
      {sortedWorkouts.length > 0 ? (
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {sortedWorkouts.map((workout, index) => (
            <article class="workout-card group relative bg-gradient-to-br from-surface to-surface-elevated rounded-3xl overflow-hidden border border-border hover:border-primary/50 transition-all duration-500 hover:shadow-2xl hover:shadow-primary/10 hover:-translate-y-2">
              <!-- Accent Bar -->
              <div class="absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-primary via-primary-light to-primary"></div>
              
              <a href={`/workouts/${workout.slug}/`} class="block p-8 no-underline">
                <!-- Header -->
                <div class="flex items-start justify-between gap-4 mb-6">
                  <div class="flex-1">
                    <div class="flex items-center gap-3 mb-3">
                      <span class="workout-number inline-flex items-center justify-center w-10 h-10 rounded-xl bg-primary/10 text-primary font-black text-lg border border-primary/20">
                        {String(index + 1).padStart(2, '0')}
                      </span>
                      <time class="text-sm text-gray-400 font-medium" datetime={workout.data.publishDate.toISOString()}>
                        {new Date(workout.data.publishDate).toLocaleDateString('en-US', {
                          month: 'short',
                          day: 'numeric',
                          year: 'numeric'
                        })}
                      </time>
                    </div>
                    <h2 class="workout-title text-2xl md:text-3xl font-black text-white leading-tight group-hover:text-primary transition-colors duration-300">
                      {workout.data.title}
                    </h2>
                  </div>
                  
                  <!-- Arrow Icon -->
                  <div class="flex-shrink-0 w-12 h-12 rounded-xl bg-primary/10 flex items-center justify-center group-hover:bg-primary group-hover:scale-110 transition-all duration-300">
                    <svg class="w-6 h-6 text-primary group-hover:text-white transform group-hover:translate-x-1 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                    </svg>
                  </div>
                </div>

                <!-- Meta Tags -->
                <div class="flex flex-wrap gap-3 mb-6">
                  <span class={`difficulty-badge inline-flex items-center gap-2 px-4 py-2 rounded-xl font-bold text-sm ${
                    workout.data.difficulty === 'Beginner' ? 'bg-green-500/10 text-green-400 border border-green-500/20' :
                    workout.data.difficulty === 'Intermediate' ? 'bg-blue-500/10 text-blue-400 border border-blue-500/20' :
                    'bg-red-500/10 text-red-400 border border-red-500/20'
                  }`}>
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                    {workout.data.difficulty}
                  </span>
                  <span class="inline-flex items-center gap-2 px-4 py-2 bg-purple-500/10 text-purple-400 rounded-xl font-bold text-sm border border-purple-500/20">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    {workout.data.duration}
                  </span>
                </div>

                <!-- Equipment Tags -->
                {workout.data.equipment && workout.data.equipment.length > 0 && (
                  <div class="flex flex-wrap gap-2 mb-6">
                    {workout.data.equipment.slice(0, 4).map(item => (
                      <span class="inline-flex items-center px-3 py-1.5 bg-gray-800/50 text-gray-300 rounded-lg text-xs font-semibold capitalize border border-gray-700 hover:border-primary/50 transition-colors duration-200">
                        {item}
                      </span>
                    ))}
                    {workout.data.equipment.length > 4 && (
                      <span class="inline-flex items-center px-3 py-1.5 bg-primary/10 text-primary rounded-lg text-xs font-bold border border-primary/20">
                        +{workout.data.equipment.length - 4} more
                      </span>
                    )}
                  </div>
                )}

                <!-- Description -->
                <p class="text-base text-gray-400 leading-relaxed line-clamp-3">
                  {workout.data.description || "No description available"}
                </p>

                <!-- Read More Indicator -->
                <div class="mt-6 flex items-center gap-2 text-primary font-bold text-sm group-hover:gap-3 transition-all duration-300">
                  <span>View Workout</span>
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                  </svg>
                </div>
              </a>
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center p-16 bg-gradient-to-br from-surface to-surface-elevated border border-border rounded-3xl">
          <div class="inline-flex items-center justify-center w-20 h-20 rounded-2xl bg-gray-800 mb-6">
            <svg class="w-10 h-10 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-white mb-3">No Workouts Yet</h3>
          <p class="text-lg text-gray-400">Check back tomorrow for fresh AI-generated workouts!</p>
        </div>
      )}
    </div>
  </div>
</BaseLayout>

<style>
  .workout-card {
    position: relative;
  }

  .workout-card::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 1.5rem;
    padding: 1px;
    background: linear-gradient(135deg, transparent, rgba(255, 107, 53, 0.1), transparent);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.5s ease;
  }

  .workout-card:hover::before {
    opacity: 1;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @media (max-width: 768px) {
    .workout-card {
      margin-bottom: 1rem;
    }
  }
</style>
