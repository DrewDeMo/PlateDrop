---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

const workouts = await getCollection('workouts');

// Sort by publish date, newest first
const sortedWorkouts = workouts.sort((a, b) => {
  const dateA = new Date(a.data.publishDate);
  const dateB = new Date(b.data.publishDate);
  return dateB.getTime() - dateA.getTime();
});
---

<BaseLayout
  title="Daily Workouts | PlateDrop"
  description="Browse PlateDrop's AI-generated daily workouts designed to motivate and challenge you every day."
>
  <div class="workouts-page">
    <div class="container">
      <header class="page-header">
        <h1 class="page-title">üèãÔ∏è Daily Workouts</h1>
        <p class="intro-text">
          Keep your fitness routine fresh with daily workouts generated by our AI system.
          Each workout is unique, structured by difficulty, equipment, and focus area.
        </p>
      </header>

      <section class="workout-list">
        {sortedWorkouts.length > 0 ? (
          <ul>
            {sortedWorkouts.map(workout => (
              <li class="workout-card">
                <a href={`/workouts/${workout.slug}/`} class="workout-link">
                  <div class="workout-header">
                    <h2 class="workout-title">{workout.data.title}</h2>
                    <time class="publish-date" datetime={workout.data.publishDate.toISOString()}>
                      {new Date(workout.data.publishDate).toLocaleDateString('en-US', {
                        month: 'short',
                        day: 'numeric',
                        year: 'numeric'
                      })}
                    </time>
                  </div>
                  <div class="workout-meta">
                    <span class="difficulty">{workout.data.difficulty}</span>
                    <span class="duration">{workout.data.duration}</span>
                  </div>
                  {workout.data.equipment && workout.data.equipment.length > 0 && (
                    <div class="equipment-tags">
                      {workout.data.equipment.map(item => (
                        <span class="equipment-tag">{item}</span>
                      ))}
                    </div>
                  )}
                  <p class="workout-summary">
                    {workout.data.description || "No description available"}
                  </p>
                </a>
              </li>
            ))}
          </ul>
        ) : (
          <div class="no-workouts">
            <p>No workouts found. Check back tomorrow for the latest!</p>
          </div>
        )}
      </section>
    </div>
  </div>
</BaseLayout>

<style>
  .workouts-page {
    min-height: 100vh;
    padding: var(--space-8) 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-6);
  }

  .page-header {
    text-align: center;
    margin-bottom: var(--space-12);
  }

  .page-title {
    font-size: var(--text-5xl);
    font-weight: 800;
    margin-bottom: var(--space-4);
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .intro-text {
    font-size: var(--text-lg);
    color: var(--color-text-secondary);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  .workout-list ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: var(--space-6);
  }

  .workout-card {
    background: var(--gradient-card);
    border: 1px solid var(--glass-border);
    border-radius: var(--radius-xl);
    overflow: hidden;
    transition: transform var(--transition-spring), box-shadow var(--transition-smooth);
  }

  .workout-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-2xl);
  }

  .workout-link {
    display: block;
    padding: var(--space-6);
    text-decoration: none;
    color: inherit;
  }

  .workout-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: var(--space-4);
    margin-bottom: var(--space-3);
  }

  .workout-title {
    font-size: var(--text-2xl);
    font-weight: 700;
    color: var(--color-text);
    transition: color var(--transition-base);
    flex: 1;
  }

  .workout-card:hover .workout-title {
    color: var(--color-primary);
  }

  .publish-date {
    font-size: var(--text-sm);
    color: var(--color-text-secondary);
    font-weight: 500;
    white-space: nowrap;
    padding: var(--space-1) var(--space-3);
    background: rgba(0, 0, 0, 0.05);
    border-radius: var(--radius-md);
  }

  .workout-meta {
    display: flex;
    gap: var(--space-3);
    margin-bottom: var(--space-4);
    flex-wrap: wrap;
  }

  .workout-meta span {
    padding: var(--space-2) var(--space-4);
    background: rgba(255, 107, 53, 0.1);
    border-radius: var(--radius-full);
    font-size: var(--text-sm);
    font-weight: 600;
    color: var(--color-primary);
  }

  .difficulty {
    background: rgba(59, 130, 246, 0.1) !important;
    color: #3b82f6 !important;
  }

  .equipment-tags {
    display: flex;
    gap: var(--space-2);
    margin-bottom: var(--space-4);
    flex-wrap: wrap;
  }

  .equipment-tag {
    padding: var(--space-1) var(--space-3);
    background: rgba(34, 197, 94, 0.1);
    border-radius: var(--radius-md);
    font-size: var(--text-xs);
    font-weight: 600;
    color: #16a34a;
    text-transform: capitalize;
  }

  .workout-summary {
    font-size: var(--text-base);
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin: 0;
  }

  .no-workouts {
    text-align: center;
    padding: var(--space-12);
    background: var(--gradient-card);
    border: 1px solid var(--glass-border);
    border-radius: var(--radius-xl);
  }

  .no-workouts p {
    font-size: var(--text-lg);
    color: var(--color-text-secondary);
    margin: 0;
  }

  @media (max-width: 768px) {
    .page-title {
      font-size: var(--text-4xl);
    }

    .intro-text {
      font-size: var(--text-base);
    }

    .workout-header {
      flex-direction: column;
      align-items: flex-start;
    }

    .workout-title {
      font-size: var(--text-xl);
    }

    .publish-date {
      align-self: flex-start;
    }
  }
</style>
