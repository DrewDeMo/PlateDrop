---
const currentPath = Astro.url.pathname;
---

<header class="site-header sticky top-0 z-[1000] bg-[#1a1614]/95 backdrop-blur-xl border-b border-white/5 transition-all duration-300" id="site-header">
  <div class="container max-w-[1400px] mx-auto px-6">
    <nav class="nav-wrapper flex items-center justify-between py-4 gap-8 relative z-[1001]">
      <a href="/" class="logo flex items-center gap-2 text-xl font-bold text-white no-underline transition-opacity duration-200 hover:opacity-80 hover:no-underline">
        <img src="/svgs/logo_new.svg" alt="PlateDrop Logo" width="32" height="32" class="w-8 h-8" />
        <span class="logo-text tracking-tight">PlateDrop</span>
      </a>
      
      <ul class="nav-links flex items-center gap-1 list-none m-0 p-0">
        <li>
          <a href="/" class={`nav-link text-sm font-medium no-underline px-4 py-2 rounded-md transition-all duration-200 hover:no-underline ${currentPath === '/' ? 'text-white bg-white/10' : 'text-white/70 hover:text-white hover:bg-white/5'}`}>
            About Us
          </a>
        </li>
        <li>
          <a href="/guides" class={`nav-link text-sm font-medium no-underline px-4 py-2 rounded-md transition-all duration-200 hover:no-underline ${currentPath.startsWith('/guides') ? 'text-white bg-white/10' : 'text-white/70 hover:text-white hover:bg-white/5'}`}>
            Services
          </a>
        </li>
        <li>
          <a href="/workouts" class={`nav-link text-sm font-medium no-underline px-4 py-2 rounded-md transition-all duration-200 hover:no-underline ${currentPath.startsWith('/workouts') ? 'text-white bg-white/10' : 'text-white/70 hover:text-white hover:bg-white/5'}`}>
            Product
          </a>
        </li>
        <li>
          <a href="/faq" class={`nav-link text-sm font-medium no-underline px-4 py-2 rounded-md transition-all duration-200 hover:no-underline ${currentPath === '/faq' ? 'text-white bg-white/10' : 'text-white/70 hover:text-white hover:bg-white/5'}`}>
            FAQ
          </a>
        </li>
      </ul>
      
      <a href="/contact" class="cta-button inline-flex items-center gap-2 px-6 py-2.5 bg-[#ff6b35] text-white text-sm font-semibold rounded-full no-underline transition-all duration-200 hover:bg-[#ff5722] hover:no-underline hover:shadow-lg hover:shadow-[#ff6b35]/30">
        Contact Us
      </a>
      
      <button class="mobile-menu-toggle hidden md:hidden items-center justify-center bg-transparent border-none cursor-pointer p-2 z-[2] relative w-10 h-10 rounded-md transition-all duration-200 hover:bg-white/5" aria-label="Toggle menu">
        <svg class="menu-icon w-6 h-6 text-white transition-all duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
        </svg>
        <svg class="close-icon w-6 h-6 text-white absolute opacity-0 transition-all duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>
      
    </nav>
  </div>
</header>

<style>
  /* Mobile menu toggle active state */
  .mobile-menu-toggle.active .menu-icon {
    @apply opacity-0 rotate-90;
  }
  
  .mobile-menu-toggle.active .close-icon {
    @apply opacity-100 rotate-0;
  }
  
  /* Mobile styles */
  @media (max-width: 768px) {
    .mobile-menu-toggle {
      @apply flex;
    }
    
    .nav-links {
      @apply fixed top-0 -right-full w-[280px] h-screen flex-col p-6 pt-20 gap-2 border-l border-white/10 shadow-2xl backdrop-blur-xl;
      background-color: rgba(26, 22, 20, 0.98);
      transition: right 400ms cubic-bezier(0.68, -0.6, 0.32, 1.6);
    }
    
    .nav-links.active {
      @apply right-0;
    }
    
    .nav-links a {
      @apply w-full justify-start px-4 py-3 text-base;
    }
    
    .cta-button {
      @apply hidden;
    }
  }
</style>

<script>
  // Mobile menu toggle
  const menuToggle = document.querySelector('.mobile-menu-toggle');
  const navLinks = document.querySelector('.nav-links');
  
  if (menuToggle && navLinks) {
    menuToggle.addEventListener('click', () => {
      navLinks.classList.toggle('active');
      menuToggle.classList.toggle('active');
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!menuToggle.contains(e.target as Node) && !navLinks.contains(e.target as Node)) {
        navLinks.classList.remove('active');
        menuToggle.classList.remove('active');
      }
    });
    
    // Close menu when clicking a link
    navLinks.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        navLinks.classList.remove('active');
        menuToggle.classList.remove('active');
      });
    });
  }
</script>
