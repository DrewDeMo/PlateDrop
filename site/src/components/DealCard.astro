---
interface Props {
  title: string;
  brand: string;
  price_current: number;
  price_prev?: number;
  discount_pct: number;
  image_url?: string;
  url: string;
  retailer: string;
  rating?: number;
  reviews_count?: number;
}

const {
  title,
  brand,
  price_current,
  price_prev,
  discount_pct,
  image_url,
  url,
  retailer,
  rating,
  reviews_count
} = Astro.props;

const formatPrice = (price: number) => `$${price.toFixed(2)}`;
const savings = price_prev ? price_prev - price_current : 0;
---

<article class="deal-card">
  {image_url && (
    <div class="deal-image">
      <img src={image_url} alt={title} loading="lazy" />
      {discount_pct > 0 && (
        <span class="discount-badge">
          {Math.round(discount_pct)}% OFF
        </span>
      )}
    </div>
  )}
  
  <div class="deal-content">
    <div class="deal-header">
      <span class="deal-brand">{brand}</span>
      <span class="deal-retailer">{retailer}</span>
    </div>
    
    <h3 class="deal-title">{title}</h3>
    
    <div class="deal-pricing">
      <div class="price-current">{formatPrice(price_current)}</div>
      {price_prev && (
        <div class="price-details">
          <span class="price-prev">{formatPrice(price_prev)}</span>
          <span class="price-savings">Save {formatPrice(savings)}</span>
        </div>
      )}
    </div>
    
    {rating && (
      <div class="deal-rating">
        <div class="stars" aria-label={`${rating} out of 5 stars`}>
          {Array.from({ length: 5 }, (_, i) => (
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill={i < Math.floor(rating) ? 'currentColor' : 'none'}
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
            </svg>
          ))}
        </div>
        {reviews_count && (
          <span class="review-count">({reviews_count.toLocaleString()} reviews)</span>
        )}
      </div>
    )}
    
    <a href={url} class="deal-link btn btn-primary" target="_blank" rel="noopener noreferrer">
      View Deal
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
        <polyline points="15 3 21 3 21 9"></polyline>
        <line x1="10" y1="14" x2="21" y2="3"></line>
      </svg>
    </a>
  </div>
</article>

<style>
  .deal-card {
    display: flex;
    flex-direction: column;
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-xl);
    overflow: hidden;
    transition: all var(--transition-base);
    height: 100%;
  }
  
  .deal-card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-4px);
    border-color: var(--color-primary);
  }
  
  .deal-image {
    position: relative;
    aspect-ratio: 4 / 3;
    background-color: var(--color-bg-tertiary);
    overflow: hidden;
  }
  
  .deal-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--transition-slow);
  }
  
  .deal-card:hover .deal-image img {
    transform: scale(1.05);
  }
  
  .discount-badge {
    position: absolute;
    top: var(--space-3);
    right: var(--space-3);
    background-color: var(--color-error);
    color: white;
    padding: var(--space-2) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--text-xs);
    font-weight: 700;
    letter-spacing: 0.05em;
    box-shadow: var(--shadow-md);
  }
  
  .deal-content {
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
    padding: var(--space-5);
    flex: 1;
  }
  
  .deal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-2);
  }
  
  .deal-brand {
    font-size: var(--text-sm);
    font-weight: 600;
    color: var(--color-primary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .deal-retailer {
    font-size: var(--text-xs);
    color: var(--color-text-tertiary);
    padding: var(--space-1) var(--space-2);
    background-color: var(--color-bg-tertiary);
    border-radius: var(--radius-sm);
  }
  
  .deal-title {
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--color-text);
    line-height: 1.3;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .deal-pricing {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
    padding-block: var(--space-2);
  }
  
  .price-current {
    font-size: var(--text-3xl);
    font-weight: 700;
    color: var(--color-text);
    line-height: 1;
  }
  
  .price-details {
    display: flex;
    align-items: center;
    gap: var(--space-3);
  }
  
  .price-prev {
    font-size: var(--text-base);
    color: var(--color-text-tertiary);
    text-decoration: line-through;
  }
  
  .price-savings {
    font-size: var(--text-sm);
    font-weight: 600;
    color: var(--color-success);
  }
  
  .deal-rating {
    display: flex;
    align-items: center;
    gap: var(--space-2);
  }
  
  .stars {
    display: flex;
    gap: var(--space-1);
    color: var(--color-accent);
  }
  
  .review-count {
    font-size: var(--text-xs);
    color: var(--color-text-tertiary);
  }
  
  .deal-link {
    margin-top: auto;
    width: 100%;
  }
  
  @media (max-width: 640px) {
    .deal-content {
      padding: var(--space-4);
    }
    
    .price-current {
      font-size: var(--text-2xl);
    }
  }
</style>