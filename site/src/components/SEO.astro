---
interface Props {
  title: string;
  description: string;
  image?: string;
  article?: boolean;
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  canonical?: string;
  schemaType?: 'WebPage' | 'Article' | 'FAQPage' | 'ItemList';
  structuredData?: any;
}

const {
  title,
  description,
  image = '/images/og-default.jpg',
  article = false,
  publishedTime,
  modifiedTime,
  author = 'PlateDrop',
  canonical,
  schemaType,
  structuredData
} = Astro.props;

const siteName = 'PlateDrop';
const siteUrl = import.meta.env.PRIMARY_SITE_URL || 'https://platedrop.fit';
const fullTitle = title?.includes(siteName) ? title : `${title} | ${siteName}`;
const canonicalURL = canonical || new URL(Astro.url.pathname, siteUrl).href;
const imageUrl = image?.startsWith('http') ? image : new URL(image, siteUrl).href;

// JSON-LD structured data
let jsonLd: any;

if (structuredData) {
  // Use custom structured data if provided
  jsonLd = structuredData;
} else {
  // Default structured data based on type
  const baseSchema = {
    '@context': 'https://schema.org',
    '@type': schemaType || (article ? 'Article' : 'WebPage'),
    headline: title,
    description: description,
    image: imageUrl,
    url: canonicalURL,
  };

  if (article || schemaType === 'Article') {
    jsonLd = {
      ...baseSchema,
      '@type': 'Article',
      author: {
        '@type': 'Organization',
        name: author
      },
      publisher: {
        '@type': 'Organization',
        name: siteName,
        logo: {
          '@type': 'ImageObject',
          url: new URL('/images/logo.png', siteUrl).href
        }
      },
      mainEntityOfPage: {
        '@type': 'WebPage',
        '@id': canonicalURL
      },
      ...(publishedTime && { datePublished: publishedTime }),
      ...(modifiedTime && { dateModified: modifiedTime })
    };
  } else {
    jsonLd = {
      ...baseSchema,
      publisher: {
        '@type': 'Organization',
        name: siteName
      }
    };
  }
}
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? 'article' : 'website'} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageUrl} />
<meta property="og:site_name" content={siteName} />
{article && publishedTime && <meta property="article:published_time" content={publishedTime} />}
{article && modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
{article && <meta property="article:author" content={author} />}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={canonicalURL} />
<meta name="twitter:title" content={fullTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={imageUrl} />

<!-- Additional Meta Tags -->
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta charset="UTF-8" />

<!-- JSON-LD Structured Data -->
<script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />